{"pageProps":{"post":{"attributes":{"title":"useId","description":"useId allows you to generate consistent IDs across renders"},"html":"<p><a href=\"https://codesandbox.io/s/github/btholt/react-hooks-examples-v4/tree/main?file=/src/Id.js\">Component</a></p>\n<p>A new hook for version 18 of React is <code>useId</code>. Frequently in React you need unique identifiers to associate two objects together. Two examples of this would be making sure a label and an input are associated together by the <code>htmlFor</code> attribute as well as when you&#39;re doing a loop in React and you need a unique <code>key</code> for each item.</p>\n<p>Previously you could maintain some sort of unique counter that was tracked across renders. With concurrent React and batching in version 18 that&#39;s no longer possible. <code>useId</code> will give you a consistent via a hook so that they can always be the same.</p>\n<p>To be clear, you will almost never need to use this. However, some day, when you need a consitent unique identifier, this can do the trick. Normally you can just use some sort of object ID like a name or a database identifier. This is for when that doesn&#39;t work.</p>\n","slug":"useid","title":"useId","section":"Hooks in Depth","icon":"search","filePath":"/home/runner/work/complete-intro-to-react-v7/complete-intro-to-react-v7/lessons/09-hooks-in-depth/K-useid.md","nextSlug":"/complete-intro-to-react-v7/lessons/tailwindcss/css-and-react","prevSlug":"/complete-intro-to-react-v7/lessons/hooks-in-depth/usedebugvalue"}},"__N_SSG":true}