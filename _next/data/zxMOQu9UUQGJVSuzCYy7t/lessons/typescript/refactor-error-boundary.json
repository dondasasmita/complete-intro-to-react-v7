{"pageProps":{"post":{"attributes":{"title":"ErrorBoundary","path":"/ts-error-boundary","order":"13E","section":"TypeScript","description":"Brian quickly converts ErrorBoundary.tsx"},"html":"<p>Let&#39;s go do ErrorBoundary.tsx now</p>\n<pre><code class=\"hljs language-tsx\"><span class=\"hljs-comment\">// add types and return types to parameters</span>\n<span class=\"hljs-title function_\">componentDidCatch</span>(<span class=\"hljs-attr\">error</span>: <span class=\"hljs-title class_\">Error</span>, <span class=\"hljs-attr\">info</span>: <span class=\"hljs-title class_\">ErrorInfo</span>): <span class=\"hljs-built_in\">void</span> {}\n</code></pre>\n<ul>\n<li>Pretty straightforward here. Just need to type some parameters that TS wouldn&#39;t be able to infer. Everything else it can infer.</li>\n</ul>\n","slug":"refactor-error-boundary","title":"ErrorBoundary","section":"Typescript","icon":"pencil-ruler","filePath":"/home/runner/work/complete-intro-to-react-v7/complete-intro-to-react-v7/lessons/14-typescript/E-refactor-error-boundary.md","nextSlug":"/complete-intro-to-react-v7/lessons/typescript/refactor-carousel","prevSlug":"/complete-intro-to-react-v7/lessons/typescript/refactor-details"}},"__N_SSG":true}